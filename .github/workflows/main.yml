name: Test Django Basic

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: mk_crew
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_HOST: postgres  # Use 'postgres' as the service name
      POSTGRES_PORT: 5432

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set Up Django Secret Key
        run: |
          echo "DJANGO_SECRET_KEY=$(openssl rand -base64 32)" >> $GITHUB_ENV

      - name: Install Requirements
        run: | 
          python -m pip install pip --upgrade
          python -m pip install -r requirements.txt

      - name: Wait for Postgres to be Ready
        run: |
          until PGPASSWORD=${{ env.POSTGRES_PASSWORD }} psql -h postgres -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }} -c "SELECT 1;" 2>/dev/null; do
            echo "Waiting for Postgres..."
            sleep 5
          done

      - name: Run Migrations
        env:
          SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
          DATABASE_URL: postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@postgres:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}
        run: |
          python manage.py migrate

      - name: Django Run Server
        env:
          SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
          DATABASE_URL: postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@postgres:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}
        run: |
          python manage.py runserver &
          sleep 5
          kill %1
